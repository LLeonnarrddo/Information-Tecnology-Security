#!/usr/sbin/nft -f

flush ruleset

table ip nat {
    chain prerouting {
        type nat hook prerouting priority 0; policy accept;

        ip saddr 192.168.43.240 tcp dport 2021 counter packets 0 bytes 0 dnat to 10.20.20.100:22

        ip saddr 192.168.43.240 tcp dport 2022 counter packets 0 bytes 0 dnat to 10.20.20.100:2022

        ip saddr 192.168.43.240 tcp dport 3306 counter packets 0 bytes 0 dnat to 10.10.10.100:3306

        ip saddr 192.168.43.240 tcp dport 53 counter packets 0 bytes 0 dnat to 10.10.10.100:53

    }

    chain postrouting {
        type nat hook postrouting priority 100; policy accept;

        ip saddr 10.10.10.0/24 oifname "eth0" counter packets 0 bytes 0 masquerade
        ip saddr 10.20.20.0/24 oifname "eth0" counter packets 0 bytes 0 masquerade

    }
}


table ip router{
        chain debug {
                type filter hook prerouting priority 101;
                ip protocol { tcp,udp } meta nftrace set 1;
        }

        chain forward {
                type filter hook forward priority 0; policy drop;

                #suricata
                #queue;


                #Aceita pacotes de conexões estabelecidas e relacionadas
                ct state established,related counter accept 

                #Permite tráfego UDP e TCP para o endereço IP 10.10.10.100 na porta 53 (DNS)
                udp dport 53 ip daddr 10.10.10.100 counter accept
                tcp dport 53 ip daddr 10.10.10.100 counter accept

                #Permite tráfego UDP e TCP para o endereço IP dns2 193.137.16.75 dns.uminho.pt na porta 53 (DNS)
                udp dport 53 ip daddr 193.137.16.75 counter accept

                #Permite tráfego UDP para o endereço IP dns cloudflare na porta 53 (DNS)
                udp dport 53 ip daddr 1.1.1.1 counter accept

                #Permite tráfego tcp  para sincronização de dns na porta 53 (DNS)
                tcp dport 53 ip daddr 192.168.43.240 counter accept

                #Permite tráfego UDP para o endereço IP dns google-generico na porta 53 (DNS)
                udp dport 53 ip daddr 8.8.8.8 counter accept

                #Permite tráfego TCP para o endereço IP 10.10.10.100 na porta 25 (SMTP)
                tcp dport 25 ip daddr 10.10.10.100 counter accept

                #Permite tráfego TCP para o endereço IP 10.10.10.100 nas portas 110 (POP3) e 143 (IMAP)
                tcp dport {110,143} ip daddr 10.10.10.100 counter accept

                #Permite tráfego TCP para o endereço IP 10.10.10.100 nas portas 80 (HTTP) e 443 (HTTPS)
                tcp dport {80,443} ip daddr 10.10.10.100 counter accept

                #Permite tráfego UDP para o endereço IP 10.10.10.100 na porta 1194 (OpenVPN)
                udp dport 1194 ip daddr 10.10.10.100 counter accept

                #Permite trafego ping
                ip protocol icmp counter accept

                #Aceitar pacotes com DNAT realizados -ssh com port 2022 - mantida
                ip saddr 192.168.43.240 ip daddr 10.20.20.100 tcp dport 2022 counter accept

                #Aceitar o tráfego para o destino NAT -ssh com port 2021 para 22 com o max de 2 ligações
                ip saddr 192.168.43.240 ip daddr 10.20.20.100 tcp dport 22 ct count 2 counter accept

                #Permitir o trafego dos clientes dhcp para vm internet
                ip saddr 10.20.20.0/24 oif "eth0" tcp dport {ssh} counter accept

                #Permitir o trafego dos clientes dhcp para a internet {http, https}
                ip saddr 10.20.20.0/24 oif "eth0" tcp dport {http, https} counter accept

                # permitir o trafego para o maria_db
                ip saddr 192.168.43.240 ip daddr 10.10.10.100 tcp dport 3306 counter accept

    }
}

define guarded_ports = {ssh}

table inet portknock {
        chain debug{
                type filter hook prerouting priority -301;
                # meta nftrace set 1 # For everything
                ip protocol {tcp} meta nftrace set 1 # Only for TCP and ICMP packets
        }

        set clients_ipv4 {
                type ipv4_addr
                flags timeout
                counter
        }

        set candidates_ipv4 {
                type ipv4_addr . inet_service
                flags timeout
                counter
        }

        chain input {
                type filter hook input priority -10; policy accept;

                iifname "lo" return

                tcp dport 123 add @candidates_ipv4 {ip  saddr . 234 timeout 60s}
                tcp dport 234 ip saddr . tcp dport @candidates_ipv4 add @candidates_ipv4 {ip saddr . 345 timeout 60s}
                tcp dport 345 ip saddr . tcp dport @candidates_ipv4 add @candidates_ipv4 {ip saddr . 456 timeout 60s}
                tcp dport 456 ip saddr . tcp dport @candidates_ipv4 add @candidates_ipv4 {ip saddr . 567 timeout 60s}
                tcp dport 567 ip saddr . tcp dport @candidates_ipv4 add @clients_ipv4 {ip saddr timeout 60s} log prefix "Successful portknock: "

                #Allow SSH
                tcp dport $guarded_ports ip  saddr @clients_ipv4 counter accept
                tcp dport $guarded_ports ct state established,related counter accept

                # Reject the remaining
                #tcp dport $guarded_ports counter reject with tcp reset
                tcp dport $guarded_ports counter drop
        }
}
